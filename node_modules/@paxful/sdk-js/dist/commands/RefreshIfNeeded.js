"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.fetchRefreshedCredentials = void 0;
var node_fetch_1 = __importStar(require("node-fetch"));
var url_1 = require("url");
var ImpersonateCredentials_1 = __importDefault(require("./ImpersonateCredentials"));
var ErrorHandling_1 = require("./ErrorHandling");
var refreshAccessToken = function (credentials, config) { return __awaiter(void 0, void 0, void 0, function () {
    var form;
    return __generator(this, function (_a) {
        switch (_a.label) {
            case 0:
                form = new url_1.URLSearchParams();
                form.append("grant_type", "refresh_token");
                form.append("refresh_token", credentials.refreshToken);
                form.append("client_id", config.clientId);
                form.append("client_secret", config.clientSecret);
                return [4 /*yield*/, node_fetch_1.default(new node_fetch_1.Request({
                        href: process.env.PAXFUL_OAUTH_HOST + "/oauth2/token"
                    }, {
                        method: "POST",
                        headers: {
                            "Content-Type": "application/x-www-form-urlencoded",
                            "Accepts": "application/json"
                        },
                        agent: config.proxyAgent,
                        body: form
                    }))
                        .then(ErrorHandling_1.handleErrors("refresh token"))
                        .then(function (tokenResponse) {
                        return ({
                            accessToken: tokenResponse.access_token,
                            refreshToken: tokenResponse.refresh_token,
                            expiresAt: new Date(Date.now() + (tokenResponse.expires_in * 1000))
                        });
                    })];
            case 1: return [2 /*return*/, _a.sent()];
        }
    });
}); };
function fetchRefreshedCredentials(credentialStorage, config) {
    return __awaiter(this, void 0, void 0, function () {
        var credentials;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    credentials = credentialStorage.getCredentials();
                    if (!credentials) {
                        throw Error("Misconfiguration: no credentials provided");
                    }
                    if (!credentials.refreshToken) return [3 /*break*/, 2];
                    return [4 /*yield*/, refreshAccessToken(credentials, config)];
                case 1:
                    credentials = _a.sent();
                    return [3 /*break*/, 4];
                case 2: return [4 /*yield*/, ImpersonateCredentials_1.default(config)];
                case 3:
                    credentials = _a.sent();
                    _a.label = 4;
                case 4: return [2 /*return*/, credentials];
            }
        });
    });
}
exports.fetchRefreshedCredentials = fetchRefreshedCredentials;
var createRefreshRequest = function (request, config, credentialStorage) { return __awaiter(void 0, void 0, void 0, function () {
    var credentials;
    return __generator(this, function (_a) {
        switch (_a.label) {
            case 0: return [4 /*yield*/, fetchRefreshedCredentials(credentialStorage, config)];
            case 1:
                credentials = _a.sent();
                credentialStorage.saveCredentials(credentials);
                request.headers.set("Authorization", "Bearer " + credentials.accessToken);
                return [2 /*return*/, Promise.resolve(request)];
        }
    });
}); };
var validateIfTokenIsExpired = function (request, response, config, credentialStorage) { return __awaiter(void 0, void 0, void 0, function () {
    var _a;
    return __generator(this, function (_b) {
        switch (_b.label) {
            case 0:
                if (!(response.status === 401)) return [3 /*break*/, 3];
                _a = node_fetch_1.default;
                return [4 /*yield*/, createRefreshRequest(request, config, credentialStorage)];
            case 1: return [4 /*yield*/, _a.apply(void 0, [_b.sent()])];
            case 2: return [2 /*return*/, _b.sent()];
            case 3: return [2 /*return*/, Promise.resolve(response)];
        }
    });
}); };
function validateAndRefresh(request, response, config, credentialStorage) {
    return validateIfTokenIsExpired(request, response, config, credentialStorage);
}
exports.default = validateAndRefresh;
//# sourceMappingURL=RefreshIfNeeded.js.map